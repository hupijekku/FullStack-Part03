{"version":3,"sources":["Components/Filter.js","Components/Notification.js","Components/Persons.js","Components/PersonForm.js","services/phbookService.js","App.js","index.js"],"names":["Filter","onFilterChange","onChange","Notification","notification","style","paddingLeft","color","success","fontSize","console","log","message","Persons","persons","filter","removeNumber","output","person","name","toLowerCase","includes","rows","map","key","id","number","onClick","PersonForm","onSubmit","onNameChange","onNumberChange","type","url","axios","get","post","delete","put","App","useState","setPersons","phone","newName","setNewName","setFilter","setNotification","useEffect","phbookService","then","res","data","catch","exception","showNotification","time","setTimeout","event","target","value","preventDefault","p","length","window","confirm","find","copy","i","findIndex","splice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f9a7ba9e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({ onFilterChange }) => {\r\n    return (\r\n        <div>\r\n            <p>Filter: </p>\r\n            <input onChange={onFilterChange}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Notification = ({ notification }) => {\r\n    const style = {\r\n        paddingLeft: 5,\r\n        color: notification.success ? \"green\" : \"red\",\r\n        fontSize: 25\r\n    }\r\n    console.log(notification)\r\n    if(notification.message) {\r\n        return(<div style={style}><p>{notification.message}</p></div>)\r\n    }\r\n    else {return (<></>)}\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst Persons = ({ persons, filter, removeNumber }) => {\r\n    console.log(persons)\r\n    let output = [...persons]\r\n    if(filter) {\r\n        output = output.filter((person) => {\r\n            return person.name.toLowerCase().includes(filter)\r\n        })\r\n    }\r\n    const rows = output.map(person => {\r\n        return <li key={person.id}>{person.name} {person.number} <button onClick={() => removeNumber(person.id)}>Remove</button></li>\r\n    })\r\n    return (\r\n        <ul>\r\n            {rows}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst PersonForm = ({onSubmit, onNameChange, onNumberChange}) => {\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <div> Name: <input onChange={onNameChange}/> </div>\r\n            <div> Number: <input onChange={onNumberChange}/> </div>\r\n            <button type=\"submit\">Add</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import axios from 'axios'\r\n\r\nconst url = \"http://localhost:3001/api/persons\"\r\n\r\nconst getAll = () => {\r\n    return axios.get(url)\r\n}\r\n\r\nconst savePerson = (person) => {\r\n    return axios.post(url, person)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    return axios.delete(`${url}/${id}`)\r\n}\r\n\r\nconst updatePerson = (id, person) => {\r\n    return axios.put(`${url}/${id}`, person)\r\n}\r\n\r\nexport default {\r\n    getAll: getAll,\r\n    savePerson: savePerson,\r\n    deletePerson: deletePerson,\r\n    updatePerson: updatePerson\r\n}","import React, { useState, useEffect } from 'react'\n\nimport Filter from './Components/Filter'\nimport Notification from './Components/Notification'\nimport Persons from './Components/Persons'\nimport PersonForm from './Components/PersonForm'\n\nimport phbookService from './services/phbookService'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState({\n    name: null,\n    phone: null\n  })\n  const [ filter, setFilter ] = useState(null)\n  const [ notification, setNotification ] = useState({\n    message: null,\n    success: false\n  })\n\n  useEffect(() => {\n    phbookService.getAll().then((res) => {\n      setPersons(res.data)\n    }).catch((exception) => {\n      throw exception\n    })\n  },[])\n\n  const showNotification = (message, time, success) => {\n    \n    setNotification({\n      message: message,\n      success: success\n    })\n    console.log(notification)\n    setTimeout(() => {\n      setNotification({\n        message: null,\n        success: false\n      })\n    }, time * 1000)\n  }\n\n  const onNameChange = (event) => {\n    setNewName({\n      name: event.target.value,\n      number: newName.number\n    })\n  }\n  \n  const onNumberChange = (event) => {\n    setNewName({\n      name: newName.name,\n      number: event.target.value\n    })\n  }\n\n  const onFilterChange = (event) => {\n    setFilter(event.target.value.toLowerCase())\n  }\n\n  const addNumber = (event) => {\n    event.preventDefault()\n\n    if(persons.filter(p => p.name === newName.name).length === 0) {\n      phbookService.savePerson(newName).then((res) => {\n        console.log(res)\n        phbookService.getAll().then((res) => {\n          setPersons(res.data)\n          showNotification(`Added ${newName.name}`, 5, true)\n        })\n      })\n    }\n    else if(window.confirm(\"Name is already on the phonebook, replace the old number with the new one?\")) {\n      const id = persons.find((person) => person.name === newName.name).id\n      phbookService.updatePerson(id,newName).then((res) => {\n        let copy = [...persons]\n        var i = persons.findIndex(p => p.id === id)\n        copy[i] = newName\n        copy[i].id = id\n        setPersons(copy)\n        showNotification(`Updated ${newName.name}`, 5, true)\n      }).catch((exception) => {\n        showNotification(`Update of ${newName.name} failed`, 5, false)\n      })\n    }\n  }\n\n  const removeNumber = (id) => {\n    var i = persons.findIndex(p => p.id === id)\n    var p = persons[i]\n    if(window.confirm(`Delete ${p.name} ?`)) {\n      phbookService.deletePerson(id).then((res) => {\n        let copy = [...persons]\n        copy.splice(i,1)\n        showNotification(`${p.name} was successfully removed`, 5, true)\n        setPersons(copy)\n      }).catch((exception) => {\n        showNotification(`${p.name} has already been removed.`, 5, false)\n      })\n    }\n\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      \n      <Notification notification={notification}/>\n\n      <Filter onFilterChange={onFilterChange}/>\n\n      <h2>Add a number</h2>\n      <PersonForm onSubmit={addNumber} onNameChange={onNameChange} onNumberChange={onNumberChange} />\n\n      <h2>Numbers</h2>\n      \n      <Persons persons={persons} filter={filter} removeNumber={removeNumber} />\n      ...\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}